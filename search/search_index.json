{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction to Mobile Robotics Welcome to this introduction to robotics. The goal of this course is to teach you how to program a robot. It covers the whole span of programming, from low-level to high-level. The course is organized in challenges with increasing difficulty. Start with the basic ones and make your way up to the final challenges. Good luck young padawan!","title":"Introduction"},{"location":"#introduction-to-mobile-robotics","text":"Welcome to this introduction to robotics. The goal of this course is to teach you how to program a robot. It covers the whole span of programming, from low-level to high-level. The course is organized in challenges with increasing difficulty. Start with the basic ones and make your way up to the final challenges. Good luck young padawan!","title":"Introduction to Mobile Robotics"},{"location":"bib/","text":"Bibliography https://lastminuteengineers.com/getting-started-with-esp32/","title":"External resources"},{"location":"bib/#bibliography","text":"https://lastminuteengineers.com/getting-started-with-esp32/","title":"Bibliography"},{"location":"Challenges/externalLED/","text":"Blinking LED Hardware Metro ESP32-S2 MCU Grove Board Sensors : LED Socket, Grove Button, Potentiometer Perpetual blinking Write a program that makes an external LED (LED Socket) to blink with 0.5s of interval. Manual blinking Use the Grove button to switch On/Off the LED Socket. Continuous dimming Write a program that change the brightness of the led continuously using analogWrite(ledPin, brightness) . The brightness is an integer between 0 and 255. Manual blinking and dimming Plug the potentiometer and use its value to dim the LED Socket.","title":"External LED"},{"location":"Challenges/externalLED/#blinking-led","text":"","title":"Blinking LED"},{"location":"Challenges/externalLED/#hardware","text":"Metro ESP32-S2 MCU Grove Board Sensors : LED Socket, Grove Button, Potentiometer","title":"Hardware"},{"location":"Challenges/externalLED/#perpetual-blinking","text":"Write a program that makes an external LED (LED Socket) to blink with 0.5s of interval.","title":"Perpetual blinking"},{"location":"Challenges/externalLED/#manual-blinking","text":"Use the Grove button to switch On/Off the LED Socket.","title":"Manual blinking"},{"location":"Challenges/externalLED/#continuous-dimming","text":"Write a program that change the brightness of the led continuously using analogWrite(ledPin, brightness) . The brightness is an integer between 0 and 255.","title":"Continuous dimming"},{"location":"Challenges/externalLED/#manual-blinking-and-dimming","text":"Plug the potentiometer and use its value to dim the LED Socket.","title":"Manual blinking and dimming"},{"location":"Challenges/internalLED/","text":"Blinking LED Hardware Connect the Microcontroller Board to a PC using an USB cable. Software Use Arduino IDE to code a program and upload it on the board. Perpetual blinking Write a program that makes the internal LED of the board to blink with intervals of 0.5s. Note that the internal LED pin number is 42. Hint Fade in / out Modify the previous program to make the internal LED fade in and fade out. Hint Neopixel Find the pin number of the neopixel LED on the Metro ESP32-S2 board. Write a program that turn this LED on and display all possible colors (rgb codes). You should use the Library Manager of the Arduino IDE to intall the Neopixel library. Neopixel documentation","title":"Internal LED"},{"location":"Challenges/internalLED/#blinking-led","text":"","title":"Blinking LED"},{"location":"Challenges/internalLED/#hardware","text":"Connect the Microcontroller Board to a PC using an USB cable.","title":"Hardware"},{"location":"Challenges/internalLED/#software","text":"Use Arduino IDE to code a program and upload it on the board.","title":"Software"},{"location":"Challenges/internalLED/#perpetual-blinking","text":"Write a program that makes the internal LED of the board to blink with intervals of 0.5s. Note that the internal LED pin number is 42. Hint","title":"Perpetual blinking"},{"location":"Challenges/internalLED/#fade-in-out","text":"Modify the previous program to make the internal LED fade in and fade out. Hint","title":"Fade in / out"},{"location":"Challenges/internalLED/#neopixel","text":"Find the pin number of the neopixel LED on the Metro ESP32-S2 board. Write a program that turn this LED on and display all possible colors (rgb codes). You should use the Library Manager of the Arduino IDE to intall the Neopixel library. Neopixel documentation","title":"Neopixel"},{"location":"Challenges/lineFollower/","text":"Line Follower Robot Assemble a full robot and write a program so that is follows a line on the floor using its line infrared sensors. The robot must stop in case of obstacle. Example Video","title":"Line Follower"},{"location":"Challenges/lineFollower/#line-follower-robot","text":"Assemble a full robot and write a program so that is follows a line on the floor using its line infrared sensors. The robot must stop in case of obstacle. Example Video","title":"Line Follower Robot"},{"location":"Challenges/maze/","text":"Maze Solver Robot Write a program that makes a robot solve maze. Example Video","title":"Maze"},{"location":"Challenges/maze/#maze-solver-robot","text":"Write a program that makes a robot solve maze. Example Video","title":"Maze Solver Robot"},{"location":"Challenges/motors/","text":"Motors Challenge Coming soon","title":"Motors"},{"location":"Challenges/motors/#motors-challenge","text":"Coming soon","title":"Motors Challenge"},{"location":"Challenges/potentiometer/","text":"Potentiometer Hardware Metro ESP32-S2 MCU Grove Board Potentiometer Plug the Grove Board on top of the MCU. Then, plug the potentiometer on the A0 socket. Software Write the code to read the analog value of the A0 pin and print it in console. Print the value of the potentiometer using this format: potentiometer:10 potentiometer:14 potentiometer:124 If you carrefully used the printing format, you can use the visualisation tool of the Arduino editor to display a graph of the variations. Hint","title":"Potentiometer"},{"location":"Challenges/potentiometer/#potentiometer","text":"","title":"Potentiometer"},{"location":"Challenges/potentiometer/#hardware","text":"Metro ESP32-S2 MCU Grove Board Potentiometer Plug the Grove Board on top of the MCU. Then, plug the potentiometer on the A0 socket.","title":"Hardware"},{"location":"Challenges/potentiometer/#software","text":"Write the code to read the analog value of the A0 pin and print it in console. Print the value of the potentiometer using this format: potentiometer:10 potentiometer:14 potentiometer:124 If you carrefully used the printing format, you can use the visualisation tool of the Arduino editor to display a graph of the variations. Hint","title":"Software"},{"location":"Challenges/servo/","text":"Servo Hardware Metro ESP32-S2 MCU Grove Board Servo Potentiometer to control a servomotor Write a program that controls the angle of a servomotor using a potentiometer.","title":"Servo"},{"location":"Challenges/servo/#servo","text":"","title":"Servo"},{"location":"Challenges/servo/#hardware","text":"Metro ESP32-S2 MCU Grove Board Servo","title":"Hardware"},{"location":"Challenges/servo/#potentiometer-to-control-a-servomotor","text":"Write a program that controls the angle of a servomotor using a potentiometer.","title":"Potentiometer to control a servomotor"},{"location":"Challenges/sonar/","text":"Sonar Hardware Metro ESP32-S2 MCU Grove Board Sonar RGB led Obstacle Detection using a Sonar Write a program that compute the distance (in cm) to an obstacle in front of the sonar. If no obstacle is in front, the program does nothing. Use the plotter tool to display a graph. RGB LED to Report Obstacles Use an RGB blinking LED to signal obstacles. The LED status should be: green = no obstacle blinking yellow = obstacle but far enough (you should find the right distance) red = close obstacle","title":"Sonar"},{"location":"Challenges/sonar/#sonar","text":"","title":"Sonar"},{"location":"Challenges/sonar/#hardware","text":"Metro ESP32-S2 MCU Grove Board Sonar RGB led","title":"Hardware"},{"location":"Challenges/sonar/#obstacle-detection-using-a-sonar","text":"Write a program that compute the distance (in cm) to an obstacle in front of the sonar. If no obstacle is in front, the program does nothing. Use the plotter tool to display a graph.","title":"Obstacle Detection using a Sonar"},{"location":"Challenges/sonar/#rgb-led-to-report-obstacles","text":"Use an RGB blinking LED to signal obstacles. The LED status should be: green = no obstacle blinking yellow = obstacle but far enough (you should find the right distance) red = close obstacle","title":"RGB LED to Report Obstacles"},{"location":"Challenges/wifi/","text":"Wifi Hardware MCU Led Access Point Write a program that creates an access point Wifi from the ESP. Hint Webserver Improve the previous program to serve a webpage directly from the ESP32 with a On/Off button that toggles a LED. Hint","title":"Wifi"},{"location":"Challenges/wifi/#wifi","text":"","title":"Wifi"},{"location":"Challenges/wifi/#hardware","text":"MCU Led","title":"Hardware"},{"location":"Challenges/wifi/#access-point","text":"Write a program that creates an access point Wifi from the ESP. Hint","title":"Access Point"},{"location":"Challenges/wifi/#webserver","text":"Improve the previous program to serve a webpage directly from the ESP32 with a On/Off button that toggles a LED. Hint","title":"Webserver"},{"location":"Hardware/baseShield/","text":"Base Shield The seeedstudio base shield can be plugged on top of the microcontroller board to easy the connection of sensors and actuators. Be carreful about the pinout. The grove board uses the Arduino pin names while the ESP32-S2 uses different numbers. In your code, you must use the ESP-32 numbers. Grove Board Metro ESP32-S2 Board Pin names Pin numbers D2 7 D3 8 D4 9 D5 10 D6 11 D7 12 D8 13 D9 14 D10 15 D11 16 D12 21 33 I2C SDA 34 I2C SCL D13 42 Internal LED 45 Neopixel Specs","title":"Base Shield"},{"location":"Hardware/baseShield/#base-shield","text":"The seeedstudio base shield can be plugged on top of the microcontroller board to easy the connection of sensors and actuators. Be carreful about the pinout. The grove board uses the Arduino pin names while the ESP32-S2 uses different numbers. In your code, you must use the ESP-32 numbers. Grove Board Metro ESP32-S2 Board Pin names Pin numbers D2 7 D3 8 D4 9 D5 10 D6 11 D7 12 D8 13 D9 14 D10 15 D11 16 D12 21 33 I2C SDA 34 I2C SCL D13 42 Internal LED 45 Neopixel Specs","title":"Base Shield"},{"location":"Hardware/lineFinder/","text":"Line Finder V 1.1 Line finder helps make line-following robots. Those eye-like sensors on the board are actually IR emitting LED and sensitive phototransistor. When the phototransistor detects the reflected infrared light from the IR emitting LED, it will output a digital signal, which changes from HIGH to LOW. A line-following robot can sense a black line by IR emitting LED and sensitive phototransistor, then they will send the signal to microcontrollers. Finally, your robot will drive the motor according to the output of the sensors. Specifications Supply Power: 5 Vcc Digital Output: State High: dark color found State Low: light color found Effective Distance: 1.5 cm to 5 cm More Information https://wiki.seeedstudio.com/Grove-Line_Finder/ https://www.seeedstudio.com/Grove-Line-Finder-p-825.html","title":"LineFinder"},{"location":"Hardware/lineFinder/#line-finder-v-11","text":"Line finder helps make line-following robots. Those eye-like sensors on the board are actually IR emitting LED and sensitive phototransistor. When the phototransistor detects the reflected infrared light from the IR emitting LED, it will output a digital signal, which changes from HIGH to LOW. A line-following robot can sense a black line by IR emitting LED and sensitive phototransistor, then they will send the signal to microcontrollers. Finally, your robot will drive the motor according to the output of the sensors.","title":"Line Finder V 1.1"},{"location":"Hardware/lineFinder/#specifications","text":"Supply Power: 5 Vcc Digital Output: State High: dark color found State Low: light color found Effective Distance: 1.5 cm to 5 cm","title":"Specifications"},{"location":"Hardware/lineFinder/#more-information","text":"https://wiki.seeedstudio.com/Grove-Line_Finder/ https://www.seeedstudio.com/Grove-Line-Finder-p-825.html","title":"More Information"},{"location":"Hardware/microcontroller/","text":"Microcontroller Board (MCU) To control the robot, we use an Adafruit Metro ESP32-S2 . This is an UNO-shaped board, compatibile with Arduino shields. It embed an the ESP32-S2, a highly-integrated, low-power, 2.4 GHz Wi-Fi System-on-Chip (SoC) solution that now has built-in native USB as well as some other interesting new technologies like Time of Flight distance measurements. Guide We recommand the Adafruit guide to the Metro ESP32-S2 . It covers a lot of ground: Overview Pinouts Pin names Pin numbers ROM Bootloader Web Serial ESPTool Install UF2 Bootloader Welcome To CircuitPython Install CircuitPython CircuitPython Essentials Arduino IDE Setup Debugging with OpenOCD Features Summary ESP32-S2 240MHz Tensilica processor - the next generation of ESP32, now with native USB so it can act like a keyboard/mouse, MIDI device, disk drive, etc! WROVER module has FCC/CE certification and comes with 4 MByte of Flash and 2 MByte of PSRAM Power options: 6-12VDC barrel jack or USB type C or Lipoly battery Built-in battery charging when powered over DC or USB Precision battery monitoring via MAX17048 on I2C UNO-shape so shields can plug in Reset and DFU (BOOT0) buttons to get into the ROM bootloader (which is a USB serial port so you don't need a separate cable!) Serial debug pins (optional, for checking the hardware serial debug console) JTAG pads for advanced debugging access. On/Off switch STEMMA QT connector for I2C devices On/Charge/User LEDs + status NeoPixel Works with Arduino or CircuitPython 53.2mm x 72mm / 2\" x 2.8\" Height (w/ barrel jack): 14.8mm / 0.6\" Weight: 22.5g","title":"Microcontroller Board (MCU)"},{"location":"Hardware/microcontroller/#microcontroller-board-mcu","text":"To control the robot, we use an Adafruit Metro ESP32-S2 . This is an UNO-shaped board, compatibile with Arduino shields. It embed an the ESP32-S2, a highly-integrated, low-power, 2.4 GHz Wi-Fi System-on-Chip (SoC) solution that now has built-in native USB as well as some other interesting new technologies like Time of Flight distance measurements.","title":"Microcontroller Board (MCU)"},{"location":"Hardware/microcontroller/#guide","text":"We recommand the Adafruit guide to the Metro ESP32-S2 . It covers a lot of ground: Overview Pinouts Pin names Pin numbers ROM Bootloader Web Serial ESPTool Install UF2 Bootloader Welcome To CircuitPython Install CircuitPython CircuitPython Essentials Arduino IDE Setup Debugging with OpenOCD","title":"Guide"},{"location":"Hardware/microcontroller/#features-summary","text":"ESP32-S2 240MHz Tensilica processor - the next generation of ESP32, now with native USB so it can act like a keyboard/mouse, MIDI device, disk drive, etc! WROVER module has FCC/CE certification and comes with 4 MByte of Flash and 2 MByte of PSRAM Power options: 6-12VDC barrel jack or USB type C or Lipoly battery Built-in battery charging when powered over DC or USB Precision battery monitoring via MAX17048 on I2C UNO-shape so shields can plug in Reset and DFU (BOOT0) buttons to get into the ROM bootloader (which is a USB serial port so you don't need a separate cable!) Serial debug pins (optional, for checking the hardware serial debug console) JTAG pads for advanced debugging access. On/Off switch STEMMA QT connector for I2C devices On/Charge/User LEDs + status NeoPixel Works with Arduino or CircuitPython 53.2mm x 72mm / 2\" x 2.8\" Height (w/ barrel jack): 14.8mm / 0.6\" Weight: 22.5g","title":"Features Summary"},{"location":"Hardware/motorShield/","text":"Motor Shield A Motor Shield lets you drive two DC motors with your Arduino board, controlling the speed and direction of each one independently. You can also measure the motor current absorption of each motor, among other features. We use this Arduino motor shield . Specifications Operating Voltage: 5V to 12V Drives 2 DC motors or 1 stepper motor Max current: 2A per channel or 4A max (with external power supply) Current sensing: 1.65V/A More Information https://store.arduino.cc/products/arduino-motor-shield-rev3","title":"Motor Shield"},{"location":"Hardware/motorShield/#motor-shield","text":"A Motor Shield lets you drive two DC motors with your Arduino board, controlling the speed and direction of each one independently. You can also measure the motor current absorption of each motor, among other features. We use this Arduino motor shield .","title":"Motor Shield"},{"location":"Hardware/motorShield/#specifications","text":"Operating Voltage: 5V to 12V Drives 2 DC motors or 1 stepper motor Max current: 2A per channel or 4A max (with external power supply) Current sensing: 1.65V/A","title":"Specifications"},{"location":"Hardware/motorShield/#more-information","text":"https://store.arduino.cc/products/arduino-motor-shield-rev3","title":"More Information"},{"location":"Hardware/motors/","text":"Motors, Wheels and Encoders Robot propulsion is based on basic RS04 kit from Dagu. The kit includes 2 wheels with soft rubber tiers and 2 magnetic encoders. Tires are driven by geared DC motors. To stabilize the robot, we use a ball caster that support rotations in 360 degrees. Description The magnetic encoders consist of two Hall sensors together with the magnetic shields to be mounted on motor shafts. Sensors change the status (from high to low or from low to high) several times per revolution of the motor shaft (see specs). Note: To read sensor values, you should apply a resistor pulling-up to VCC, for example, 10 k\u03a9. Specifications Geared DC Motors Voltage: 3V to 6V DC No load Current: 200mA Stall current: 3A at 6V 1.5A at 3V Gearbox ratio: 118.5:1 Wheel Speed: 135Rpm at 6V unloaded Dimensions: 55 x 48 x 24 mm Encoders Resolution: 8 state changes per revolution when mounted on the output shaft 948 state changes per revolution when mounted on the motor shaft Hall-Effect sensor with open drain: Short circuit protection Reverse polarity protection Maximum Output Current: 25mA Voltage: 3V to 24V Consumed Current: 4mA Neodymium Disc Magnet: Poles: 8 Diameter: 20 mm Encoder Cables Each Hall-effect sensor is soldered to a 3-pin cable with a female goldpin connector (2.54 mm pitch). The connector has the following pins: Red- supply voltage (VCC) in the range from 3 to 24 V Black- ground of the system (GND) White- impulse output of a Hall sensor Wheels Diameter: 65 mm Thickness: 26 mm Ball Caster","title":"Motors & Wheels"},{"location":"Hardware/motors/#motors-wheels-and-encoders","text":"Robot propulsion is based on basic RS04 kit from Dagu. The kit includes 2 wheels with soft rubber tiers and 2 magnetic encoders. Tires are driven by geared DC motors. To stabilize the robot, we use a ball caster that support rotations in 360 degrees.","title":"Motors, Wheels and Encoders"},{"location":"Hardware/motors/#description","text":"The magnetic encoders consist of two Hall sensors together with the magnetic shields to be mounted on motor shafts. Sensors change the status (from high to low or from low to high) several times per revolution of the motor shaft (see specs). Note: To read sensor values, you should apply a resistor pulling-up to VCC, for example, 10 k\u03a9.","title":"Description"},{"location":"Hardware/motors/#specifications","text":"","title":"Specifications"},{"location":"Hardware/motors/#geared-dc-motors","text":"Voltage: 3V to 6V DC No load Current: 200mA Stall current: 3A at 6V 1.5A at 3V Gearbox ratio: 118.5:1 Wheel Speed: 135Rpm at 6V unloaded Dimensions: 55 x 48 x 24 mm","title":"Geared DC Motors"},{"location":"Hardware/motors/#encoders","text":"Resolution: 8 state changes per revolution when mounted on the output shaft 948 state changes per revolution when mounted on the motor shaft Hall-Effect sensor with open drain: Short circuit protection Reverse polarity protection Maximum Output Current: 25mA Voltage: 3V to 24V Consumed Current: 4mA Neodymium Disc Magnet: Poles: 8 Diameter: 20 mm","title":"Encoders"},{"location":"Hardware/motors/#encoder-cables","text":"Each Hall-effect sensor is soldered to a 3-pin cable with a female goldpin connector (2.54 mm pitch). The connector has the following pins: Red- supply voltage (VCC) in the range from 3 to 24 V Black- ground of the system (GND) White- impulse output of a Hall sensor","title":"Encoder Cables"},{"location":"Hardware/motors/#wheels","text":"Diameter: 65 mm Thickness: 26 mm","title":"Wheels"},{"location":"Hardware/motors/#ball-caster","text":"","title":"Ball Caster"},{"location":"Hardware/powerBoard/","text":"Power Board We use a 4-Way 18650 Battery Holder . Pictures Operation ON/OFF via Push Button The push button controls the module switch. Make a light press to turn the module on. A 3 seconds long press will turn it off. LEDs Current and Charge Indicators When charging, LED1, LED2, LED3, and LED4 will blink until the batteries are fully charged. During discharge, the LEDs represent the current intensity. Mode Switch: Normal/Hold In Normal mode, the board will auto shutdown when the current is too low. In HOLD mode, it keeps outputting and does not shut down until the over-discharge protection is triggered. Specifications Input Ports for Charging 1 micro USB port 1 USB type-C port Output Ports 5 output ports 5V/2A, to solder 5 output ports 3.3V/1A, to solder 1 USB output port Other 4 slots for 16850 batteries 4 LEDs 1 ON/OFF push button 1 mode DIP switch: Normal/Hold Safety and Limits Overcharge protection Discharge protection maximum peak current: 3A for short period of time. depends on the quality of the 18650 batteries. Pay attention to battery polarity when installing. The + and - are clearly marked on the board, and the wrong direction will burn the module.","title":"Power Board"},{"location":"Hardware/powerBoard/#power-board","text":"We use a 4-Way 18650 Battery Holder .","title":"Power Board"},{"location":"Hardware/powerBoard/#pictures","text":"","title":"Pictures"},{"location":"Hardware/powerBoard/#operation","text":"","title":"Operation"},{"location":"Hardware/powerBoard/#onoff-via-push-button","text":"The push button controls the module switch. Make a light press to turn the module on. A 3 seconds long press will turn it off.","title":"ON/OFF via Push Button"},{"location":"Hardware/powerBoard/#leds-current-and-charge-indicators","text":"When charging, LED1, LED2, LED3, and LED4 will blink until the batteries are fully charged. During discharge, the LEDs represent the current intensity.","title":"LEDs Current and Charge Indicators"},{"location":"Hardware/powerBoard/#mode-switch-normalhold","text":"In Normal mode, the board will auto shutdown when the current is too low. In HOLD mode, it keeps outputting and does not shut down until the over-discharge protection is triggered.","title":"Mode Switch: Normal/Hold"},{"location":"Hardware/powerBoard/#specifications","text":"","title":"Specifications"},{"location":"Hardware/powerBoard/#input-ports-for-charging","text":"1 micro USB port 1 USB type-C port","title":"Input Ports for Charging"},{"location":"Hardware/powerBoard/#output-ports","text":"5 output ports 5V/2A, to solder 5 output ports 3.3V/1A, to solder 1 USB output port","title":"Output Ports"},{"location":"Hardware/powerBoard/#other","text":"4 slots for 16850 batteries 4 LEDs 1 ON/OFF push button 1 mode DIP switch: Normal/Hold","title":"Other"},{"location":"Hardware/powerBoard/#safety-and-limits","text":"Overcharge protection Discharge protection maximum peak current: 3A for short period of time. depends on the quality of the 18650 batteries. Pay attention to battery polarity when installing. The + and - are clearly marked on the board, and the wrong direction will burn the module.","title":"Safety and Limits"},{"location":"Hardware/sensors/","text":"Potentiometer This sensor produces an analog output between 0V and VCC (3.3V with ESP) on its D1 pin. D2 is unused. the angular range is 300 degrees with a linear change in value. The resistance value is 10k ohm. LED Socket Grove Button Chainable RGB LED RED LED Button","title":"Sensors"},{"location":"Hardware/sensors/#potentiometer","text":"This sensor produces an analog output between 0V and VCC (3.3V with ESP) on its D1 pin. D2 is unused. the angular range is 300 degrees with a linear change in value. The resistance value is 10k ohm.","title":"Potentiometer"},{"location":"Hardware/sensors/#led-socket","text":"","title":"LED Socket"},{"location":"Hardware/sensors/#grove-button","text":"","title":"Grove Button"},{"location":"Hardware/sensors/#chainable-rgb-led","text":"","title":"Chainable RGB LED"},{"location":"Hardware/sensors/#red-led-button","text":"","title":"RED LED Button"},{"location":"Hardware/servo/","text":"Servo A servomotor is a DC motor that embeds a mechanims that measures the shaft position. The shaft position can be controlled by providing an angle. require PWM control signals shaft position controlled by pulse width Controlling a Servo on an ESP32 board requires using the ESP32Servo library. Indeed, the standard Servo Arduino library does not wotk on ESP32. Tutorial","title":"Servo"},{"location":"Hardware/servo/#servo","text":"A servomotor is a DC motor that embeds a mechanims that measures the shaft position. The shaft position can be controlled by providing an angle. require PWM control signals shaft position controlled by pulse width Controlling a Servo on an ESP32 board requires using the ESP32Servo library. Indeed, the standard Servo Arduino library does not wotk on ESP32. Tutorial","title":"Servo"},{"location":"Hardware/sonar/","text":"Ultrasonic Range Sensor (Sonar) V2.0 Ultrasonic ranger is a non-contact distance measurement module which works at 40KHz. When we provide a pulse trigger signal with more than 10uS through signal pin, the sensor will issue 8 cycles of 40kHz cycle level and detect the echo. The trigger and echo signals share the same SIG pin. The pulse width of the echo signal is proportional to the measured distance. Here is the formula: Distance = echo signal high time * Sound speed (340M/S)/2. Specifications Supply Power: 3.3V / 5V Measurement angle: 15 degrees Measuring range: 2cm - 350cm Resolution: 1cm Output: PWM Ultrasonic frequency: 40KHz Grove Pins Only 3 pins are used. Transmit and receive signals occupy one I/O pin through time division multiplexing. More Information https://wiki.seeedstudio.com/Grove-Ultrasonic_Ranger/ https://www.seeedstudio.com/Grove-Ultrasonic-Distance-Sensor.html","title":"Sonar"},{"location":"Hardware/sonar/#ultrasonic-range-sensor-sonar-v20","text":"Ultrasonic ranger is a non-contact distance measurement module which works at 40KHz. When we provide a pulse trigger signal with more than 10uS through signal pin, the sensor will issue 8 cycles of 40kHz cycle level and detect the echo. The trigger and echo signals share the same SIG pin. The pulse width of the echo signal is proportional to the measured distance. Here is the formula: Distance = echo signal high time * Sound speed (340M/S)/2.","title":"Ultrasonic Range Sensor (Sonar) V2.0"},{"location":"Hardware/sonar/#specifications","text":"Supply Power: 3.3V / 5V Measurement angle: 15 degrees Measuring range: 2cm - 350cm Resolution: 1cm Output: PWM Ultrasonic frequency: 40KHz","title":"Specifications"},{"location":"Hardware/sonar/#grove-pins","text":"Only 3 pins are used. Transmit and receive signals occupy one I/O pin through time division multiplexing.","title":"Grove Pins"},{"location":"Hardware/sonar/#more-information","text":"https://wiki.seeedstudio.com/Grove-Ultrasonic_Ranger/ https://www.seeedstudio.com/Grove-Ultrasonic-Distance-Sensor.html","title":"More Information"},{"location":"Software/ArduinoIDE/","text":"Arduino IDE Installation Install Arduino IDE 2.x . Adafruit documentation for the Metro ESP32-S2 board but it uses Arduino IDE 1.x: https://learn.adafruit.com/adafruit-metro-esp32-s2/using-with-arduino-ide https://learn.adafruit.com/adafruit-metro-esp32-s2/arduino-ide-setup-2","title":"Arduino IDE"},{"location":"Software/ArduinoIDE/#arduino-ide","text":"","title":"Arduino IDE"},{"location":"Software/ArduinoIDE/#installation","text":"Install Arduino IDE 2.x . Adafruit documentation for the Metro ESP32-S2 board but it uses Arduino IDE 1.x: https://learn.adafruit.com/adafruit-metro-esp32-s2/using-with-arduino-ide https://learn.adafruit.com/adafruit-metro-esp32-s2/arduino-ide-setup-2","title":"Installation"},{"location":"Software/CircuitPython/","text":"CircuitPython What is CircuitPython? CircuitPython is a programming language designed to simplify experimenting and learning to program on low-cost microcontroller boards. It makes getting started easier than ever with no upfront desktop downloads needed. Once you get your board set up, open any text editor, and get started editing code. It's that simple. The full documentation is here . Is CircuitPython installed on a Microcontroller Board? Plug a Microcontroller Board to a USB port of a PC If you get a USB drive named CIRCUITPY , CircuitPython is already installed on the board You can code the board by editing the file named code.py How to install CircuitPython on a Microcontroller? In a nutshell, here the steps to follow: Open Google Chrome (not Firefox) on https://circuitpython.org/board/adafruit_metro_esp32s2/ Connect your microcontroller board to an USB port of your PC Turn on the On/Off switch if needed so the LEDs will turn on. Make the the board enter the Drive Firmware Update (DFU) mode to update the ROM bootloader as explained in the Adafruit tutotrial . This means: Press and hold the DFU / Boot0 button down. Don't let go of it yet! Press and release the Reset button. Release the DFU / Boot0 button Click on the button Open Installer and select Full CircuitPython X.Y.Z Install Follow the instructions until you have a USB drive named CIRCUIT that automatically mount when pluging the microcontroller board to the PC in USB How to code on your Microcontroller? Just edit the file code.py file on the CIRCUITPY drive. Code Editor CircuitPython website recommands some code editors . For example: - Mu editor - gedit on Ubuntu Another possibility consists in using Google Chrome and a web-based editor . CircuitPython Libraries More sophisticated programs use external libraries ( import statements in the Python code). Those external libraries should be copied into the lib folder in the CIRCUITPY drive. https://circuitpython.org/libraries Other Resources CircuitPython Tutorials https://www.youtube.com/playlist?list=PL9VJ9OpT-IPSsQUWqQcNrVJqy4LhBjPX2 Simulating CircuitPython code on a Raspberry Pi Pico board in your browser using Wokwi https://github.com/adafruit/awesome-circuitpython FAQ Mu editor installed using apt on Ubuntu 22.04 crashes On Ubuntu 22.04 you can install mu editor using: sudo apt install mu-editor However, it throws an error at startup. An easy fix is described here : Edit the file: sudo gedit /usr/share/mu-editor/mu/interface/main.py and modify lines 774-775: - self.move((screen.width() - size.width()) / 2, - (screen.height() - size.height()) / 2) + self.move((screen.width() - size.width()) // 2, + (screen.height() - size.height()) // 2)","title":"CircuitPython"},{"location":"Software/CircuitPython/#circuitpython","text":"","title":"CircuitPython"},{"location":"Software/CircuitPython/#what-is-circuitpython","text":"CircuitPython is a programming language designed to simplify experimenting and learning to program on low-cost microcontroller boards. It makes getting started easier than ever with no upfront desktop downloads needed. Once you get your board set up, open any text editor, and get started editing code. It's that simple. The full documentation is here .","title":"What is CircuitPython?"},{"location":"Software/CircuitPython/#is-circuitpython-installed-on-a-microcontroller-board","text":"Plug a Microcontroller Board to a USB port of a PC If you get a USB drive named CIRCUITPY , CircuitPython is already installed on the board You can code the board by editing the file named code.py","title":"Is CircuitPython installed on a Microcontroller Board?"},{"location":"Software/CircuitPython/#how-to-install-circuitpython-on-a-microcontroller","text":"In a nutshell, here the steps to follow: Open Google Chrome (not Firefox) on https://circuitpython.org/board/adafruit_metro_esp32s2/ Connect your microcontroller board to an USB port of your PC Turn on the On/Off switch if needed so the LEDs will turn on. Make the the board enter the Drive Firmware Update (DFU) mode to update the ROM bootloader as explained in the Adafruit tutotrial . This means: Press and hold the DFU / Boot0 button down. Don't let go of it yet! Press and release the Reset button. Release the DFU / Boot0 button Click on the button Open Installer and select Full CircuitPython X.Y.Z Install Follow the instructions until you have a USB drive named CIRCUIT that automatically mount when pluging the microcontroller board to the PC in USB","title":"How to install CircuitPython on a Microcontroller?"},{"location":"Software/CircuitPython/#how-to-code-on-your-microcontroller","text":"Just edit the file code.py file on the CIRCUITPY drive.","title":"How to code on your Microcontroller?"},{"location":"Software/CircuitPython/#code-editor","text":"CircuitPython website recommands some code editors . For example: - Mu editor - gedit on Ubuntu Another possibility consists in using Google Chrome and a web-based editor .","title":"Code Editor"},{"location":"Software/CircuitPython/#circuitpython-libraries","text":"More sophisticated programs use external libraries ( import statements in the Python code). Those external libraries should be copied into the lib folder in the CIRCUITPY drive. https://circuitpython.org/libraries","title":"CircuitPython Libraries"},{"location":"Software/CircuitPython/#other-resources","text":"CircuitPython Tutorials https://www.youtube.com/playlist?list=PL9VJ9OpT-IPSsQUWqQcNrVJqy4LhBjPX2 Simulating CircuitPython code on a Raspberry Pi Pico board in your browser using Wokwi https://github.com/adafruit/awesome-circuitpython","title":"Other Resources"},{"location":"Software/CircuitPython/#faq","text":"","title":"FAQ"},{"location":"Software/CircuitPython/#mu-editor-installed-using-apt-on-ubuntu-2204-crashes","text":"On Ubuntu 22.04 you can install mu editor using: sudo apt install mu-editor However, it throws an error at startup. An easy fix is described here : Edit the file: sudo gedit /usr/share/mu-editor/mu/interface/main.py and modify lines 774-775: - self.move((screen.width() - size.width()) / 2, - (screen.height() - size.height()) / 2) + self.move((screen.width() - size.width()) // 2, + (screen.height() - size.height()) // 2)","title":"Mu editor installed using apt on Ubuntu 22.04 crashes"},{"location":"Software/MicroPython/","text":"MicroPython What is MircoPython? MicroPython is a lean and efficient implementation of the Python 3 programming language that includes a small subset of the Python standard library and is optimised to run on microcontrollers and in constrained environments. The full documentation is here . How to install MircoPython on a Microcontroller? Official Doc In a nutshell, here the steps to follow: Install esptool pip install esptool Erase the board esptool.py --chip esp32s2 --port /dev/ttyACM1 erase_flash esptool.py v4.7.0 Serial port /dev/ttyACM1 Connecting.... Chip is ESP32-S2 (revision v0.0) Features: WiFi, No Embedded Flash, No Embedded PSRAM, ADC and temperature sensor calibration in BLK2 of efuse V1 Crystal is 40MHz MAC: 7c:df:a1:17:8c:98 Uploading stub... Running stub... Stub running... Erasing flash (this may take a while)... Chip erase completed successfully in 16.3s WARNING: ESP32-S2 (revision v0.0) chip was placed into download mode using GPIO0. esptool.py can not exit the download mode over USB. To run the app, reset the chip manually. To suppress this note, set --after option to 'no_reset'. Flash it esptool.py --chip esp32s2 --port /dev/ttyACM1 write_flash -z 0x1000 ESP32_GENERIC_S2-20240222-v1.22.2.bin esptool.py v4.7.0 Serial port /dev/ttyACM1 Connecting... Chip is ESP32-S2 (revision v0.0) Features: WiFi, No Embedded Flash, No Embedded PSRAM, ADC and temperature sensor calibration in BLK2 of efuse V1 Crystal is 40MHz MAC: 7c:df:a1:17:8c:98 Uploading stub... Running stub... Stub running... Configuring flash size... Flash will be erased from 0x00001000 to 0x0015bfff... Compressed 1418416 bytes to 928487... Wrote 1418416 bytes (928487 compressed) at 0x00001000 in 11.2 seconds (effective 1013.6 kbit/s)... Hash of data verified. Leaving... WARNING: ESP32-S2 (revision v0.0) chip was placed into download mode using GPIO0. esptool.py can not exit the download mode over USB. To run the app, reset the chip manually. To suppress this note, set --after option to 'no_reset'. Web REPL Activate it from UART REPL first: tio /dev/ttyACM1 [15:22:29.145] tio v2.7 [15:22:29.145] Press ctrl-t q to quit [15:22:29.146] Connected >>> import webrepl_setup WebREPL daemon auto-start status: disabled Would you like to (E)nable or (D)isable it running on boot? (Empty line to quit) > E To enable WebREPL, you must set password for it New password (4-9 chars): 1234 Confirm password: 1234 Changes will be activated after reboot Would you like to reboot now? (y/n) y [15:23:09.830] Disconnected [15:23:10.831] Connected 2. Edit and deploy code MicroPython Libraries Other Resources - FAQ","title":"MicroPython"},{"location":"Software/MicroPython/#micropython","text":"","title":"MicroPython"},{"location":"Software/MicroPython/#what-is-mircopython","text":"MicroPython is a lean and efficient implementation of the Python 3 programming language that includes a small subset of the Python standard library and is optimised to run on microcontrollers and in constrained environments. The full documentation is here .","title":"What is MircoPython?"},{"location":"Software/MicroPython/#how-to-install-mircopython-on-a-microcontroller","text":"Official Doc In a nutshell, here the steps to follow: Install esptool pip install esptool Erase the board esptool.py --chip esp32s2 --port /dev/ttyACM1 erase_flash esptool.py v4.7.0 Serial port /dev/ttyACM1 Connecting.... Chip is ESP32-S2 (revision v0.0) Features: WiFi, No Embedded Flash, No Embedded PSRAM, ADC and temperature sensor calibration in BLK2 of efuse V1 Crystal is 40MHz MAC: 7c:df:a1:17:8c:98 Uploading stub... Running stub... Stub running... Erasing flash (this may take a while)... Chip erase completed successfully in 16.3s WARNING: ESP32-S2 (revision v0.0) chip was placed into download mode using GPIO0. esptool.py can not exit the download mode over USB. To run the app, reset the chip manually. To suppress this note, set --after option to 'no_reset'. Flash it esptool.py --chip esp32s2 --port /dev/ttyACM1 write_flash -z 0x1000 ESP32_GENERIC_S2-20240222-v1.22.2.bin esptool.py v4.7.0 Serial port /dev/ttyACM1 Connecting... Chip is ESP32-S2 (revision v0.0) Features: WiFi, No Embedded Flash, No Embedded PSRAM, ADC and temperature sensor calibration in BLK2 of efuse V1 Crystal is 40MHz MAC: 7c:df:a1:17:8c:98 Uploading stub... Running stub... Stub running... Configuring flash size... Flash will be erased from 0x00001000 to 0x0015bfff... Compressed 1418416 bytes to 928487... Wrote 1418416 bytes (928487 compressed) at 0x00001000 in 11.2 seconds (effective 1013.6 kbit/s)... Hash of data verified. Leaving... WARNING: ESP32-S2 (revision v0.0) chip was placed into download mode using GPIO0. esptool.py can not exit the download mode over USB. To run the app, reset the chip manually. To suppress this note, set --after option to 'no_reset'.","title":"How to install MircoPython on a Microcontroller?"},{"location":"Software/MicroPython/#web-repl","text":"Activate it from UART REPL first: tio /dev/ttyACM1 [15:22:29.145] tio v2.7 [15:22:29.145] Press ctrl-t q to quit [15:22:29.146] Connected >>> import webrepl_setup WebREPL daemon auto-start status: disabled Would you like to (E)nable or (D)isable it running on boot? (Empty line to quit) > E To enable WebREPL, you must set password for it New password (4-9 chars): 1234 Confirm password: 1234 Changes will be activated after reboot Would you like to reboot now? (y/n) y [15:23:09.830] Disconnected [15:23:10.831] Connected 2.","title":"Web REPL"},{"location":"Software/MicroPython/#edit-and-deploy-code","text":"","title":"Edit and deploy code"},{"location":"Software/MicroPython/#micropython-libraries","text":"","title":"MicroPython Libraries"},{"location":"Software/MicroPython/#other-resources","text":"-","title":"Other Resources"},{"location":"Software/MicroPython/#faq","text":"","title":"FAQ"},{"location":"Software/PlatformioIDE/","text":"Platformio IDE Installation sudo apt install python3 python3-venv https://platformio.org/install/ide?install=vscode","title":"Platformio IDE"},{"location":"Software/PlatformioIDE/#platformio-ide","text":"","title":"Platformio IDE"},{"location":"Software/PlatformioIDE/#installation","text":"sudo apt install python3 python3-venv https://platformio.org/install/ide?install=vscode","title":"Installation"}]}